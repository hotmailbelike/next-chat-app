import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
});

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang='en'>
			<body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
				{children}
			</body>
		</html>
	);
}

// import type { Metadata } from 'next';
// import { Geist, Geist_Mono } from 'next/font/google';
// import './globals.css';
// import { redirect } from 'next/navigation';
// // import { getServerSession } from 'next-auth';
// import AuthWrapper from '../components/AuthWrapper';

// const geistSans = Geist({
// 	variable: '--font-geist-sans',
// 	subsets: ['latin'],
// });

// const geistMono = Geist_Mono({
// 	variable: '--font-geist-mono',
// 	subsets: ['latin'],
// });

// export const metadata: Metadata = {
// 	title: 'Next Chat App',
// 	description: 'Chat app created using Pusher, Prisma, MongoDB, Next Auth and Tailwind',
// };

// export default async function RootLayout({
// 	children,
// 	params,
// }: Readonly<{
// 	children: React.ReactNode;
// 	params: Promise<any>;
// }>) {
// 	// const session = await getServerSession();

// 	return (
// 		<html lang='en'>
// 			<body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
// 				{/* <AuthWrapper session={session}>{children}</AuthWrapper> */}
// 				{children}
// 			</body>
// 		</html>
// 	);
// }
